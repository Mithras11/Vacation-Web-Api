// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vacation.Data;

#nullable disable

namespace Vacation.Data.Migrations
{
    [DbContext(typeof(VacationDbContext))]
    partial class VacationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Vacation.Domain.Entities.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CitizenId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CitizenId");

                    b.ToTable("Achievement", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CitizenId = 1,
                            Name = "Sposalizio"
                        },
                        new
                        {
                            Id = 2,
                            CitizenId = 2,
                            Name = "La divina commedia"
                        },
                        new
                        {
                            Id = 3,
                            CitizenId = 3,
                            Name = "Das Cabinet von Dr. Caligari"
                        },
                        new
                        {
                            Id = 4,
                            CitizenId = 4,
                            Name = "Candid"
                        },
                        new
                        {
                            Id = 5,
                            CitizenId = 5,
                            Name = "Ethics"
                        });
                });

            modelBuilder.Entity("Vacation.Domain.Entities.Citizen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Citizen", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Raphael Sanzio"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Name = "Dante Alighieri"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Name = "Max Schreck"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            Name = "Voltaire"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 5,
                            Name = "Aristotle"
                        });
                });

            modelBuilder.Entity("Vacation.Domain.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Rome"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Florence"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 3,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 4,
                            Name = "Athens"
                        });
                });

            modelBuilder.Entity("Vacation.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Country", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 3,
                            Name = "France"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Greece"
                        });
                });

            modelBuilder.Entity("Vacation.Domain.Entities.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Place", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Vatican"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Name = "Colosseum"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Name = "Uffizi"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 3,
                            Name = "Brandenburg gate"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 4,
                            Name = "Le Louvre"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 4,
                            Name = "L'Arc de triomphe"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 5,
                            Name = "Acropolis"
                        });
                });

            modelBuilder.Entity("Vacation.Domain.Entities.Achievement", b =>
                {
                    b.HasOne("Vacation.Domain.Entities.Citizen", "Citizen")
                        .WithMany("Achievements")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizen");
                });

            modelBuilder.Entity("Vacation.Domain.Entities.Citizen", b =>
                {
                    b.HasOne("Vacation.Domain.Entities.City", "City")
                        .WithMany("FamousCitizens")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Vacation.Domain.Entities.City", b =>
                {
                    b.HasOne("Vacation.Domain.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Vacation.Domain.Entities.Place", b =>
                {
                    b.HasOne("Vacation.Domain.Entities.City", "City")
                        .WithMany("PlacesToVisit")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Vacation.Domain.Entities.Citizen", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Vacation.Domain.Entities.City", b =>
                {
                    b.Navigation("FamousCitizens");

                    b.Navigation("PlacesToVisit");
                });

            modelBuilder.Entity("Vacation.Domain.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
